{"version":3,"file":"component---src-templates-blog-post-tsx-ac61a661910a0796968f.js","mappings":"6NAOA,MA8CaA,EAAOC,IAAwC,IAArCC,MAAQC,eAAgBC,IAAQH,EACrD,OACEI,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,QAClDC,cAAUC,GACV,EAIN,UAxDyBC,IAAwE,IAAAC,EAAA,IAArEZ,MAAM,SAAEa,EAAQ,KAAEC,EAAI,KAAEC,EAAMd,eAAgBC,GAAM,SAAEc,GAAUL,EAC1F,MAAMM,GAA6B,QAAjBL,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBP,QAAK,QAE1C,OACEF,EAAAA,cAACgB,EAAAA,EAAM,CAACH,SAAUA,EAAUX,MAAOY,GACjCd,EAAAA,cAAA,WAASiB,UAAU,YAAYC,WAAS,EAACC,SAAS,6BAChDnB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIoB,SAAS,YAAYrB,EAAKI,YAAYD,OAC1CF,EAAAA,cAAA,SAAID,EAAKI,YAAYkB,OAEvBrB,EAAAA,cAAA,WAASsB,wBAAyB,CAAEC,OAAQxB,EAAKyB,MAAQJ,SAAS,gBAClEpB,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACEA,EAAAA,cAACyB,EAAAA,EAAG,QAGRzB,EAAAA,cAAA,OAAKiB,UAAU,iBACbjB,EAAAA,cAAA,MACE0B,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX/B,EAAAA,cAAA,UACGU,GACCV,EAAAA,cAACgC,EAAAA,KAAI,CAACC,GAAIvB,EAASwB,OAAOC,KAAMC,IAAI,QAAO,KACtC1B,EAASP,YAAYD,QAI9BF,EAAAA,cAAA,UACGW,GACCX,EAAAA,cAACgC,EAAAA,KAAI,CAACC,GAAItB,EAAKuB,OAAOC,KAAMC,IAAI,QAC7BzB,EAAKR,YAAYD,MAAM,SAM3B,C","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\n\nconst BlogPostTemplate = ({ data: { previous, next, site, markdownRemark: post }, location }) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article className='blog-post' itemScope itemType='http://schema.org/Article'>\n        <header>\n          <h1 itemProp='headline'>{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} itemProp='articleBody' />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className='blog-post-nav'>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel='prev'>\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel='next'>\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n      children={undefined}\n    />\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($id: String!, $previousPostId: String, $nextPostId: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["Head","_ref2","data","markdownRemark","post","React","Seo","title","frontmatter","description","excerpt","children","undefined","_ref","_site$siteMetadata","previous","next","site","location","siteTitle","siteMetadata","Layout","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}